name: Build and Deploy Backend
on:
  push:
    branches:
      - main

env:
  # The repository name on Docker Hub
  DOCKER_IMAGE_NAME: vinayakvispute/100xdevs-week27-backend # <-- Change this
  # The static name for the container on the VM
  CONTAINER_NAME: production-backend-container
  # ✅ The specific label for this application. This is the key!
  APP_NAME: production-backend

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Login into DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_PASSWORD}}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./docker/dockerFile.backend
          push: true
          tags: ${{env.DOCKER_IMAGE_NAME}}:${{github.sha}}
          labels: app=${{ env.APP_NAME }}

      - name: Execute remote SSH commands using SSH key & Run Docker file
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_PRODUCTION_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e
            FULL_IMAGE_NAME="${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}"

            echo "🛑 Stopping and removing old container..."
            docker stop ${{env.CONTAINER_NAME}}
            docker rm ${{env.CONTAINER_NAME}}

            echo "⬇️ Pulling new image: $FULL_IMAGE_NAME"
            docker pull $FULL_IMAGE_NAME

            echo "🚀 Running new container..."
            docker run --name ${env.CONTAINER_NAME} -e DATABASE_URL=${{Secrets.STAGING_DATABASE_URL}} -d --restart always -p 8001:8001 $FULL_IMAGE_NAME

            # ✅ THE TARGETED CLEANUP COMMAND
            # Prune only unused images that have the label "app=production-backend"
            echo "🧹 Cleaning up old images for app: ${{ env.APP_NAME }}"
            docker image prune -a -f --filter "label=app=${{ env.APP_NAME }}"

            echo "All Services are deployed succesfully."
